/*
 * lcd.c
 *
 *  Created on: Oct 10, 2022
 *      Author: alie
 */


#include "lcd.h"
static void	lcd_write_4bits(uint8_t value);
static void LCD_ENABLE();
static void Reset_LCD_PINS(void);
static void Set_LCD_PINS(void);


void mdelay(uint32_t cnt)
{
	for(uint32_t i = 0 ; i < (cnt*1000) ; i++);
}
void udelay(uint32_t cnt)
{
	for(uint32_t i = 0 ; i < (cnt*1) ; i++);
}

void lcd_send_command(uint8_t cmd)
{
	/* RS = 0 and RW = 0  for LCD Command */
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_RS, GPIO_PIN_RESET);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_RW, GPIO_PIN_RESET);

	lcd_write_4bits(cmd >> 4);
	lcd_write_4bits(cmd &0x0F);

}
void lcd_send_char(uint8_t cmd)
{
	/* RS = 1 and RW = 0  for LCD Command */
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_RS, GPIO_PIN_SET);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_RW, GPIO_PIN_RESET);
	lcd_write_4bits(cmd >> 4);
	lcd_write_4bits(cmd &0x0F);



}
void lcd_init(void)
{
	//1. configure the GPIO pins
	GPIO_Handle_t lcd_signal;

	lcd_signal.pGPIOx = LCD_GPIO_PORT;
	lcd_signal.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
	lcd_signal.GPIO_PinConfig.GPIO_PinNumber = LCD_GPIO_RS;
	lcd_signal.GPIO_PinConfig.GPIO_PinOpType = GPIO_OP_TYPE_PP;
	lcd_signal.GPIO_PinConfig.GPIO_PuPdControl = GPIO_PU;
	lcd_signal.GPIO_PinConfig.GPIO_PinSPeed = GPIO_SPEED_HIGH;

	GPIO_Init(&lcd_signal);


	lcd_signal.GPIO_PinConfig.GPIO_PinNumber = LCD_GPIO_RW;
	GPIO_Init(&lcd_signal);

	lcd_signal.GPIO_PinConfig.GPIO_PinNumber = LCD_GPIO_EN;
	GPIO_Init(&lcd_signal);


	lcd_signal.GPIO_PinConfig.GPIO_PinNumber = LCD_GPIO_D7;
	GPIO_Init(&lcd_signal);

	lcd_signal.GPIO_PinConfig.GPIO_PinNumber = LCD_GPIO_D5;
	GPIO_Init(&lcd_signal);

	lcd_signal.GPIO_PinConfig.GPIO_PinNumber = LCD_GPIO_D4;
	GPIO_Init(&lcd_signal);


	lcd_signal.GPIO_PinConfig.GPIO_PinNumber = LCD_GPIO_D6;
	GPIO_Init(&lcd_signal);

	Set_LCD_PINS();

	//set zero to all pin
	Reset_LCD_PINS();


	// start initialization

	mdelay(40);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_RS, GPIO_PIN_RESET);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_RW, GPIO_PIN_RESET);

	lcd_write_4bits(0x3);

	mdelay(5);

	lcd_write_4bits(0x3);

	udelay(150);

	lcd_write_4bits(0x3);

	lcd_write_4bits(0x2);

	// LCD Set command
	lcd_send_command(LCD_CMD_4DL_2N_5X8F);

	//LCD display off
	lcd_send_command(LCD_CMD_DON_CURON);

	// LCD Display clear
	LCD_DISPLAY_CLEAR();

	// Entry Mode set LCD_CMD_DON_CURON
	lcd_send_command(LCD_CMD_INCADO);

}
void lcd_print_string(char * message)
{
	do
	{
		lcd_send_char((uint8_t)*message++);

	}
	while(*message !='\0');
}
static void	lcd_write_4bits(uint8_t value)
{

	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_D4, ((value >> 0) &0x1));
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_D5, ((value >> 1) &0x1));
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_D6, ((value >> 2) &0x1));
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_D7, ((value >> 3) &0x1));

	LCD_ENABLE();

}

static void LCD_ENABLE()
{
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_EN, GPIO_PIN_SET);
	udelay(100);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_EN, GPIO_PIN_RESET);
	udelay(100);
}
void LCD_DISPLAY_RETURN_HOME()
{
	lcd_send_command(LCD_CMD_DIS_RETURN_HOME);
	mdelay(2);
}
void LCD_DISPLAY_CLEAR()
{
	lcd_send_command(LCD_CMD_DIS_CLEAR);
	mdelay(2);


}
void LCD_SET_CURSOR(uint8_t row,uint8_t col)
{
	col--;
	switch(row)
	{
	case 1:
		/* set cursor to 1st row address and add index */
		lcd_send_command(col |= 0x80);
		break;
	case 2:
		/* set cursor to 2nd row address and add index */
		lcd_send_command(col |= 0xC0);
		break;
	default:
		break;
	}
}
static void Reset_LCD_PINS()
{
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_RS, GPIO_PIN_RESET);
	mdelay(10);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_EN, GPIO_PIN_RESET);
	mdelay(10);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_RW, GPIO_PIN_RESET);
	mdelay(10);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_D4, GPIO_PIN_RESET);
	mdelay(10);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_D5, GPIO_PIN_RESET);
	mdelay(10);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_D6, GPIO_PIN_RESET);
	mdelay(10);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_D7, GPIO_PIN_RESET);
}
static void Set_LCD_PINS(void)
{
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_RS, GPIO_PIN_SET);
	mdelay(10);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_EN, GPIO_PIN_SET);
	mdelay(10);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_RW, GPIO_PIN_SET);
	mdelay(10);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_D4, GPIO_PIN_SET);
	mdelay(10);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_D5, GPIO_PIN_SET);
	mdelay(10);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_D6, GPIO_PIN_SET);
	mdelay(10);
	GPIO_WriteToOutputPin(LCD_GPIO_PORT, LCD_GPIO_D7, GPIO_PIN_SET);
}
